name: Pull Request CI

on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Generate coverage report
        run: npx nyc report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: coverage/e2e

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always()

    steps:
      - name: Check job statuses
        id: job-statuses
        run: |
          echo "lint_status=${{ needs.lint.result }}" >> $GITHUB_OUTPUT
          echo "unit_test_status=${{ needs.unit-test.result }}" >> $GITHUB_OUTPUT
          echo "e2e_test_status=${{ needs.e2e-test.result }}" >> $GITHUB_OUTPUT

      - name: Create status comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## CI Status

            | Job            | Status                                                                                                                                |
            |----------------|---------------------------------------------------------------------------------------------------------------------------------------|
            | Lint           | ${{ needs.lint.result == 'success' && '✅' || '❌' }} ${{ needs.lint.result }}                                                            |
            | Unit Tests     | ${{ needs.unit-test.result == 'success' && '✅' || '❌' }} ${{ needs.unit-test.result }}                                                  |
            | E2E Tests      | ${{ needs.e2e-test.result == 'success' && '✅' || '❌' }} ${{ needs.e2e-test.result }}                                                    |

            ${{ (needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success') && 'All checks passed! 🎉' || 'Some checks failed. Please review the logs.' }}
          reactions: "${{ (needs.lint.result == 'success' && needs.unit-test.result == 'success' && needs.e2e-test.result == 'success') && 'hooray' || 'eyes' }}"
